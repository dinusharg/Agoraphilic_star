<?xml version="1.0"?>
<!--
  Gazebo ROS ackermann drive plugin demo

  Try sending commands:

    ros2 topic pub /demo/cmd_demo geometry_msgs/msg/Twist '{linear: {x: 1.0}, angular: {z: 0.1}}' -1

  Try listening to odometry:

    ros2 topic echo /demo/odom_demo

  Try listening to odometer reading(linear distance convered):

    ros2 topic echo /demo/distance_demo

  Try listening to TF:

    ros2 run tf2_ros tf2_echo odom_demo chassis

    and other links
-->
<sdf version="1.6">

    <model name="skid_robot">
      <pose>0 0 0.03 0 0 0</pose>

      <!-- Links -->
      <link name="chassis">
        <pose>0 0 0.230 0 0 0</pose>
        <!-- <pose>0 0 0 0 0 0</pose> -->
        <inertial>
          <mass>50</mass>
          <pose>0 0 0 0 0 0</pose>
          <!-- <inertia>
            <ixx>2581.13354740</ixx>
            <ixy>0.0</ixy>
            <iyy>591.30846112</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>2681.95008628</izz>
          </inertia> -->
        </inertial>

        <visual name="chassis_visual">
          <!-- <pose>0 0 0 0 0 0</pose> -->
          <geometry>
            <box>
              <size>0.544 0.42 0.26</size>
              <!-- <size>0.544 0.42 -1</size> -->
            </box>
          </geometry>

          <material> <!-- Wheel material -->
          <ambient>1 0.8 0 1</ambient>
          <diffuse>1 0.8 0 1</diffuse>
          <specular>0 0 0 0</specular>
          <emissive>0 0 0 1</emissive>
        </material> <!-- End wheel material -->
        </visual>

        <collision name="chassis">
          <pose>0.0 0 0.23 0 0 0</pose>
          <geometry>
            <box>
              <size>0.544 0.42 0.1</size>
            </box>
          </geometry>
        </collision>
      </link>

      <link name="front_left_wheel">
        <pose>0.25 0.285  0.1 -1.5708  0 0  </pose>
        <inertial>
          <mass>10</mass>
          <!-- <inertia>
            <ixx>0.58631238</ixx>
            <ixy>0.0</ixy>
            <iyy>0.33552910</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>0.33552910</izz>
          </inertia> -->
        </inertial>

        <visual name="visual">
      	  <!-- <pose>0.0 0.0 0.0 1.5708 0 1.5708</pose>
          <pose>0 0 0.0 0 0 0</pose> -->
          <geometry>
            <mesh>
              <uri>model://gus_simulation_1/meshes/wheel_left.dae</uri>
              <scale>2 2 2.5</scale>
            </mesh>
          </geometry>
        </visual>

        <collision name="collision">
          <!-- <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.2</radius>
             <length>0.13</length>
            </cylinder>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0.9</mu>
                <mu2>0.9</mu2>
                <slip1>0.0</slip1>
                <slip2>0.0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <min_depth>0.001</min_depth>
                <kp>1e9</kp>
              </ode>
            </contact>
          </surface>

        </collision>
      </link>

      <link name="front_right_wheel">
        <pose>0.25 -0.285 0.1 -1.5708  0 0</pose>
        <inertial>
          <mass>10</mass>
          <!-- <inertia>
            <ixx>0.58631238</ixx>
            <ixy>0.0</ixy>
            <iyy>0.33552910</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>0.33552910</izz>
          </inertia> -->
        </inertial>
        <visual name="visual">
          <!-- <pose>-0.0 0.0 0.0 1.5708 0 1.5708</pose>
          <pose>0 0 0.0 0 0 0</pose> -->
          <geometry>
            <mesh>
               <uri>model://gus_simulation_1/meshes/wheel_right.dae</uri>
              <scale>2 2 2.5</scale>
            </mesh>
          </geometry>
        </visual>

        <collision name="collision">
          <!-- <pose>0.0 0.0 0.0 0 1.5707963267948966 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.2</radius>
             <length>0.13</length>
            </cylinder>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>0.9</mu>
                <mu2>0.9</mu2>
                <slip1>0.0</slip1>
                <slip2>0.0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <min_depth>0.001</min_depth>
                <kp>1e9</kp>
              </ode>
            </contact>
          </surface>

        </collision>
      </link>


      <link name="rear_left_wheel">
        <pose>-0.25 0.285 0.1 -1.5708  0 0</pose>
        <inertial>
          <mass>10</mass>
          <!-- <inertia>
            <ixx>0.58631238</ixx>
            <ixy>0.0</ixy>
            <iyy>0.33552910</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>0.33552910</izz>
          </inertia> -->
        </inertial>

        <visual name="visual">
          <!-- <pose>0.04 0.0 0.0 1.5708 0 1.5708</pose> -->
          <geometry>
            <mesh>
                <uri>model://gus_simulation_1/meshes/wheel_left.dae</uri>
               <scale>2 2 2.5</scale>
            </mesh>
          </geometry>
        </visual>

        <collision name="collision">
          <!-- <pose>0.04 0.0 0.0 0 1.5707963267948966 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.2</radius>
             <length>0.13</length>
            </cylinder>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1.1</mu>
                <mu2>1.1</mu2>
                <slip1>0.0</slip1>
                <slip2>0.0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <min_depth>0.001</min_depth>
                <kp>1e9</kp>
              </ode>
            </contact>
          </surface>

        </collision>
      </link>

      <link name="rear_right_wheel">
        <pose>-0.25 -0.285 0.1 -1.5708  0 0</pose>
        <inertial>
          <mass>10</mass>
          <!-- <inertia>
            <ixx>0.58631238</ixx>
            <ixy>0.0</ixy>
            <iyy>0.33552910</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>0.33552910</izz>
          </inertia> -->
        </inertial>
        <visual name="visual">
           <!-- <pose>-0.04 0.0 0.0 1.5708 0 1.5708</pose>
          <pose>0 0 0.0 0 0 0</pose> -->
          <geometry>
            <mesh>
                <uri>model://gus_simulation_1/meshes/wheel_right.dae</uri>
              <scale>2 2 2.5</scale>
            </mesh>
          </geometry>
        </visual>

        <collision name="collision">
          <!-- <pose>-0.04 0.0 0.0 0 1.5707963267948966 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.2</radius>
             <length>0.13</length>
            </cylinder>
          </geometry>
          <surface>
            <friction>
              <ode>
                <mu>1.1</mu>
                <mu2>1.1</mu2>
                <slip1>0.0</slip1>
                <slip2>0.0</slip2>
              </ode>
            </friction>
            <contact>
              <ode>
                <min_depth>0.001</min_depth>
                <kp>1e9</kp>
              </ode>
            </contact>
          </surface>
        </collision>
      </link>

      <link name="rear_axle">
        <pose>-0.25 0 0.1 1.5707963267948966 0  0</pose>
        <inertial>
          <mass>5.0</mass>
          <inertia>
            <ixx>0.08437499999999999</ixx>
            <ixy>0.0</ixy>
            <iyy>4.64581</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>4.64581</izz>
          </inertia>
        </inertial>

        <visual name="visual">
           <!-- <pose>-0.04 0.0 0.0 1.5708 0 1.5708</pose>
          <pose>0 0 0.0 0 0 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.01</radius>
             <length>0.6</length>
            </cylinder>
          </geometry>
          <material> <!-- Wheel material -->
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.1 0.1 0.2 1</diffuse>
          <specular>0 0 0 0</specular>
          <emissive>0 0 0 1</emissive>
        </material> <!-- End wheel material -->
        </visual>
      </link>

      <link name="front_axle">
        <pose>0.25 0 0.1 1.5707963267948966 0  0</pose>
        <inertial>
          <mass>5.0</mass>
          <inertia>
            <ixx>0.08437499999999999</ixx>
            <ixy>0.0</ixy>
            <iyy>4.64581</iyy>
            <ixz>0.0</ixz>
            <iyz>0.0</iyz>
            <izz>4.64581</izz>
          </inertia>
        </inertial>

        <visual name="visual">
           <!-- <pose>-0.04 0.0 0.0 1.5708 0 1.5708</pose>
          <pose>0 0 0.0 0 0 0</pose> -->
          <geometry>
            <cylinder>
              <radius>0.01</radius>
             <length>0.6</length>
            </cylinder>
          </geometry>
          <material> <!-- Wheel material -->
          <ambient>0.1 0.1 0.1 1</ambient>
          <diffuse>0.1 0.1 0.2 1</diffuse>
          <specular>0 0 0 0</specular>
          <emissive>0 0 0 1</emissive>
        </material> <!-- End wheel material -->
        </visual>
      </link>

      <!-- Joints -->
      <joint type="fixed" name="rear_axle_joint">
        <!-- <pose>0 0.210 0 0 0 0</pose> -->
        <child>rear_axle</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
      </joint>

      <joint type="fixed" name="front_axle_joint">
        <!-- <pose>0 0.210 0 0 0 0</pose> -->
        <child>front_axle</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
      </joint>

      <joint type="revolute" name="front_left_wheel_joint">
        <pose>0 0 0 0 0 0</pose>
        <child>front_left_wheel</child>
        <parent>front_axle</parent>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
      </joint>

      <joint type="revolute" name="front_right_wheel_joint">
        <pose>0 0 0 0 0 0</pose>
        <child>front_right_wheel</child>
        <parent>front_axle</parent>
        <axis>
          <xyz>0 0 1</xyz>
        </axis>
      </joint>

      <joint type="revolute" name="rear_left_wheel_joint">
      <pose>0 0 0 0 0 0</pose>
        <child>rear_left_wheel</child>
        <parent>rear_axle</parent>
        <axis>
          <xyz>0 0 1</xyz>
          <!-- <dynamics>
            <friction>12.031606150200002</friction>
          </dynamics> -->
        </axis>
      </joint>
      <joint type="revolute" name="rear_right_wheel_joint">
      <pose>0 0 0 0 0 0</pose>
        <child>rear_right_wheel</child>
        <parent>rear_axle</parent>
        <axis>
          <xyz>0 0 1</xyz>
          <!-- <dynamics>
            <friction>12.031606150200002</friction>
          </dynamics> -->
        </axis>
      </joint>

      <plugin name='skid_steer_drive' filename='libgazebo_ros_diff_drive.so'>
        <ros>
          <!-- Set namespace -->
          <namespace>/skid</namespace>

          <!-- Remap default topics -->
          <remapping>cmd_vel:=cmd_vel</remapping>
          <remapping>odom:=odom_demo</remapping>
        </ros>

        <!-- Update rate -->
        <update_rate>500</update_rate>

        <!-- Number of wheel pairs -->
        <num_wheel_pairs>2</num_wheel_pairs>

        <!-- wheels0 -->
       <left_joint>front_left_wheel_joint</left_joint>
        <right_joint>front_right_wheel_joint</right_joint>
        

        <!-- wheels1-->
         <left_joint>rear_left_wheel_joint</left_joint>
        <right_joint>rear_right_wheel_joint</right_joint>
        

        <!-- kinematics -->
        <wheel_separation>0.57</wheel_separation>
        <wheel_separation>0.57</wheel_separation>

        <wheel_diameter>0.4</wheel_diameter>
        <wheel_diameter>0.4</wheel_diameter>

        <!-- limits -->
        <max_wheel_torque>500</max_wheel_torque>
        <max_wheel_acceleration>1</max_wheel_acceleration>

        <!-- output -->
        <publish_odom>true</publish_odom>
        <publish_odom_tf>true</publish_odom_tf>
        <publish_wheel_tf>false</publish_wheel_tf>

        <odometry_frame>odom</odometry_frame>
        <robot_base_frame>chassis</robot_base_frame>

      </plugin>




      <!-- *********************** DEPTH CAMERA ******************************  -->
<!-- The depth camera (e.g. Intel Realsense camera). -->
<link name="camera_depth_frame">
  <pose>0.12 0 0.65 -1.5708 0 -1.5708</pose>
</link>
 
<link name="camera_link">
  <pose>0.35 0 0.3 0 0 0</pose>
  
   
  <visual name="camera_visual">
    <pose>-0.005 0 0 0 0 0</pose>
    <geometry>
      <box>
        <size>0.015 0.08 0.022</size>
      </box>
    </geometry>
    <material>
      <ambient>0 0 0 1.0</ambient>
      <diffuse>0 0 0 1.0</diffuse>
      <specular>0.0 0.0 0.0 1.0</specular>
      <emissive>0.0 0.0 0.0 1.0</emissive>
    </material>
  </visual>    
   
  <!-- <sensor name="camera1" type="depth"> -->
   <sensor name="depth_camera" type="depth">
    <always_on>true</always_on>
    <visualize>false</visualize>
    <update_rate>10</update_rate>
    <camera name="camera">
       <horizontal_fov>1.5708</horizontal_fov>
      <vertical_fov>1.01229</vertical_fov> 
      <!-- <horizontal_fov>2.05</horizontal_fov>
      <vertical_fov>6.28319</vertical_fov>-->
      <image>
        <width>640</width>
        <height>480</height>
        <format>R8G8B8</format>
      </image>
      <!-- <depth_camera>
      </depth_camera> -->
      <clip>
        <near>0.03</near>
        <far>6.0</far>
      </clip>
      <noise>
        <type>gaussian</type>
        <!-- Noise is sampled independently per pixel on each frame.
             That pixel's noise value is added to each of its color
              channels, which at that point lie in the range [0,1]. -->
        <mean>0.0</mean>
        <stddev>0.007</stddev>
      </noise>
    </camera>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
      <!-- <ros>
        <namespace>skid</namespace>

        topics need to be prefixed with camera_name for remapping
        <remapping>mycamera/image_raw:=depth_cam1/image_raw</remapping>
        <remapping>mycamera/depth/image_raw:=depth_cam1/depth/image_raw</remapping>
        <remapping>mycamera/camera_info:=depth_cam1/camera_info</remapping>
        <remapping>mycamera/depth/camera_info:=depth_cam1/camera_info</remapping>
        <remapping>mycamera/points:=depth_cam1/points</remapping>
      </ros> -->

      <!-- <camera_name>mycamera</camera_name> -->
      <frame_name>camera_depth_frame</frame_name>
      <!-- <hack_baseline>0</hack_baseline> -->
      <min_depth>0.03</min_depth>
      <max_depth>6</max_depth>
    </plugin>
  </sensor>
</link>

    <joint name='camera_joint' type='fixed'>
      <parent>chassis</parent>
      <child>camera_link</child>
      <pose>0 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>

    <joint name="camera_optical_joint" type="fixed">
        <parent>camera_link</parent>
        <child>camera_depth_frame</child>
        <pose>0 0 0 0 0 0 </pose>
    </joint>

      

       <link name="gps_link">
        <pose>0 0 0.36 0 0 0</pose>
        <visual name="gps_visual">
          <geometry>
            <box>
              <size>0.008 0.008 0.008</size>
            </box>
          </geometry>
          <material>
            <ambient>0 0 0 1.0</ambient>
            <diffuse>0 0 0 1.0</diffuse>
            <specular>0.0 0.0 0.0 1.0</specular>
            <emissive>0.0 0.0 0.0 1.0</emissive>
          </material>
        </visual> 

        <sensor name="gps_sensor" type="gps">
          <always_on>true</always_on>
          <update_rate>1.0</update_rate>
          <plugin name="gps_controller" filename="libgazebo_ros_gps_sensor.so">
            <ros>
                <!-- <namespace>/br</namespace> -->
                <namespace>skid</namespace>
                <remapping>gps_controller/out:=gps</remapping>
            </ros>
            <frame_name>gps_link</frame_name>
          </plugin>
        </sensor>
       </link>

      <joint name='gps_joint' type='fixed'>
        <parent>chassis</parent>
        <child>gps_link</child>
        <pose>0 0 0 0 -0 0</pose>
        <physics>
          <ode>
            <limit>
              <cfm>0</cfm>
              <erp>0.2</erp>
            </limit>
            <suspension>
              <cfm>0</cfm>
              <erp>0.2</erp>
            </suspension>
          </ode>
        </physics>
      </joint>  

      <link name="imu_link">
        <pose>0 0 0.25 0 0 0</pose>
        
        <visual name="imu_visual">
          <pose>-0 0 0 0 0 0</pose>
          <geometry>
            <box>
              <size>0.008 0.008 0.008</size>
            </box>
          </geometry>
          <material>
            <ambient>0 0 0 1.0</ambient>
            <diffuse>0 0 0 1.0</diffuse>
            <specular>0.0 0.0 0.0 1.0</specular>
            <emissive>0.0 0.0 0.0 1.0</emissive>
          </material>
        </visual> 
          <sensor name="imu_sensor" type="imu">
            <always_on>true</always_on>
            <update_rate>100</update_rate>
            <visualize>true</visualize>
            <topic>__default_topic__</topic>
            <plugin filename="libgazebo_ros_imu_sensor.so" name="gus_sim_1_imu">
              <topicName>imu</topicName>
              <bodyName>imu_link</bodyName>
              <updateRateHZ>10.0</updateRateHZ>
              <gaussianNoise>0.0</gaussianNoise>
              <xyzOffset>0 0 0</xyzOffset>
              <rpyOffset>0 0 0</rpyOffset>
              <frameName>imu_link</frameName>
            </plugin>
            <pose>0 0 0 0 0 0</pose>
          </sensor>
      </link>    

    <joint name='imu_joint' type='fixed'>
        <parent>chassis</parent>
      <child>imu_link</child>
      <pose>0 0 0 0 -0 0</pose>
      <physics>
        <ode>
          <limit>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </limit>
          <suspension>
            <cfm>0</cfm>
            <erp>0.2</erp>
          </suspension>
        </ode>
      </physics>
    </joint>  


    <!-- Add the laser range finder -->
    <link name="laser_link_hfov">
      <inertial>
        <!-- Mass of the laser range finder in kg -->
        <mass>0.1</mass>
      </inertial>
      <!-- Position is towards the front of the robot -->
      <!-- Laser finder is mounted on top -->
      <!-- <pose>0.265 0 0.37 0 0 0</pose> -->
      <pose>0.35 0 0.3 0 0 0</pose>
         
      <!-- Add a mesh to make it more visually appealing -->
      <visual name="visual">
        <geometry>
          <mesh>
            <box>
              <size>0.05 0.05 0.041</size>
            </box>
          </mesh>
        </geometry>
      </visual>
         
      <!-- Collision properties of the base of the laser range finder-->
      <collision name="collision-base">
        <pose>0 0 -0.0145 0 0 0</pose>
        <geometry>
          <box>
            <size>0.05 0.05 0.041</size>
          </box>
        </geometry>
      </collision>
      <!-- Collision properties of the top of the laser range finder-->
      <collision name="collision-top">
        <pose>0 0 0.0205 0 0 0</pose>
        <geometry>
          <cylinder>
            <radius>0.021</radius>
            <length>0.029</length>
          </cylinder>
        </geometry>
      </collision>
         
      <!-- Describes the type and properties of the sensor -->
	    <sensor name="laser" type="ray">
	      <pose>0 0 0 0 0 0</pose>
          <ray>
            <scan>
              <horizontal>
                <!-- <samples>180</samples>
                <resolution>1</resolution>
                <min_angle>-1.57080</min_angle>
                <max_angle>1.57080</max_angle> -->
<!-- 
                <samples>360</samples>
                <resolution>1</resolution>
                <min_angle>-3.1416</min_angle>
                <max_angle>3.1416</max_angle> -->

                <samples>90</samples>
                <resolution>1</resolution>
                <min_angle>-0.6545</min_angle>
                <max_angle>0.6545</max_angle>

              </horizontal>

               <vertical>
                <samples>90</samples>
                <resolution>1</resolution>
                <min_angle>-0.54105</min_angle>
                <max_angle>0.54105</max_angle>

              </vertical>
            </scan>
            <range>
              <min>0.03</min>
              <max>6</max>
              <resolution>0.01</resolution>
            </range>
          </ray>
          <always_on>1</always_on>
          <update_rate>10</update_rate>
          <visualize>false</visualize>

      
	    </sensor>
    </link>

      <!-- Add the laser range finder -->
       <link name="laser_link">
         <inertial>
           <!-- Mass of the laser range finder in kg -->
           <mass>0.1</mass>
         </inertial>
         <!-- Position is towards the front of the robot -->
         <!-- Laser finder is mounted on top -->
         <!-- <pose>0.265 0 0.37 0 0 0</pose> -->
         <pose>0.265 0 0.37 0 0.174533 0</pose>
         
         <!-- Add a mesh to make it more visually appealing -->
         <visual name="visual">
           <geometry>
             <mesh>
               <uri>model://gus_simulation_1/hokuyo/meshes/hokuyo.dae</uri>
             </mesh>
           </geometry>
         </visual>
         
         <!-- Collision properties of the base of the laser range finder-->
         <collision name="collision-base">
           <pose>0 0 -0.0145 0 0 0</pose>
           <geometry>
             <box>
               <size>0.05 0.05 0.041</size>
             </box>
           </geometry>
         </collision>
         <!-- Collision properties of the top of the laser range finder-->
         <collision name="collision-top">
           <pose>0 0 0.0205 0 0 0</pose>
           <geometry>
             <cylinder>
               <radius>0.021</radius>
               <length>0.029</length>
             </cylinder>
           </geometry>
         </collision>
         
         <!-- Describes the type and properties of the sensor -->
	 <sensor name="laser" type="ray">
	   <pose>0.01 0 0.0175 0 -0 0</pose>
           <ray>
             <scan>
               <horizontal>
                 <!-- <samples>180</samples>
                 <resolution>1</resolution>
                 <min_angle>-1.57080</min_angle>
                 <max_angle>1.57080</max_angle> -->
<!-- 
                 <samples>360</samples>
                 <resolution>1</resolution>
                 <min_angle>-3.1416</min_angle>
                 <max_angle>3.1416</max_angle> -->

                 <samples>90</samples>
                 <resolution>1</resolution>
                 <min_angle>-1.025</min_angle>
                 <max_angle>1.025</max_angle>
               

               </horizontal>
               
     
             </scan>
             <range>
               <min>0.03</min>
               <max>6</max>
               <resolution>0.01</resolution>
             </range>
           </ray>
           <always_on>1</always_on>
           <update_rate>10</update_rate>
           <visualize>false</visualize>

           <plugin name='laser' filename='libgazebo_ros_ray_sensor.so'>
          <ros>
            <namespace>/skid</namespace>
            <argument>--ros-args --remap ~/out:=scan</argument>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
        </plugin>
	    </sensor>
    </link>

    <!-- Connect laser range finder to the robot's body -->
    <joint type="fixed" name="laser_joint">
        <child>laser_link</child>
      <parent>chassis</parent>
    </joint>

    <joint type="fixed" name="laser_joint_hfov">
        <child>laser_link_hfov</child>
      <parent>chassis</parent>
    </joint>
    
  </model>
</sdf>
